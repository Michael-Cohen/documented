{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the DOCUMENTED project! v7 Documentation: https://Michael-Cohen.github.io/documented or https://documented.readthedocs.io/en/latest/","title":"Introduction"},{"location":"api_insightful/","text":"Insightful The insightful package talks about this and that flow This is an important module. flow_function ( x : int , y : str ) -> str Sphinx-style doc of flow_function Additional documentation. :param x: an integer :param y: a string :return: the returned string Source code in insightful/flow.py 4 5 6 7 8 9 10 11 12 13 14 def flow_function ( x : int , y : str ) -> str : \"\"\"Sphinx-style doc of flow_function Additional documentation. :param x: an integer :param y: a string :return: the returned string \"\"\" z = f \"y... { x } \" return z flow_function_bis ( x : int , y : str ) -> str Numpy-style doc of flow_function Additional documentation. Parameters int an integer str a string Returns str The returned string Source code in insightful/flow.py 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def flow_function_bis ( x : int , y : str ) -> str : \"\"\"Numpy-style doc of flow_function Additional documentation. Parameters ---------- x : int an integer y : str a string Returns ------- str The returned string \"\"\" z = f \"y... { x } \" return z flow_function_ter ( x : int , y : str ) -> str Google-style doc of flow_function. Additional documentation. Parameters: Name Type Description Default x int an integer. required y int a string. required Returns: Name Type Description str str The returned string. Source code in insightful/flow.py 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 def flow_function_ter ( x : int , y : str ) -> str : \"\"\"Google-style doc of flow_function. Additional documentation. Args: x (int): an integer. y (int): a string. Returns: str: The returned string. \"\"\" z = f \"y... { x } \" return z","title":"Insightful"},{"location":"api_insightful/#insightful_1","text":"The insightful package talks about this and that","title":"Insightful"},{"location":"api_insightful/#insightful.flow","text":"This is an important module.","title":"flow"},{"location":"api_insightful/#insightful.flow.flow_function","text":"Sphinx-style doc of flow_function Additional documentation. :param x: an integer :param y: a string :return: the returned string Source code in insightful/flow.py 4 5 6 7 8 9 10 11 12 13 14 def flow_function ( x : int , y : str ) -> str : \"\"\"Sphinx-style doc of flow_function Additional documentation. :param x: an integer :param y: a string :return: the returned string \"\"\" z = f \"y... { x } \" return z","title":"flow_function()"},{"location":"api_insightful/#insightful.flow.flow_function_bis","text":"Numpy-style doc of flow_function Additional documentation.","title":"flow_function_bis()"},{"location":"api_insightful/#insightful.flow.flow_function_bis--parameters","text":"int an integer str a string","title":"Parameters"},{"location":"api_insightful/#insightful.flow.flow_function_bis--returns","text":"str The returned string Source code in insightful/flow.py 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def flow_function_bis ( x : int , y : str ) -> str : \"\"\"Numpy-style doc of flow_function Additional documentation. Parameters ---------- x : int an integer y : str a string Returns ------- str The returned string \"\"\" z = f \"y... { x } \" return z","title":"Returns"},{"location":"api_insightful/#insightful.flow.flow_function_ter","text":"Google-style doc of flow_function. Additional documentation. Parameters: Name Type Description Default x int an integer. required y int a string. required Returns: Name Type Description str str The returned string. Source code in insightful/flow.py 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 def flow_function_ter ( x : int , y : str ) -> str : \"\"\"Google-style doc of flow_function. Additional documentation. Args: x (int): an integer. y (int): a string. Returns: str: The returned string. \"\"\" z = f \"y... { x } \" return z","title":"flow_function_ter()"},{"location":"api_interesting/","text":"Interesting mmmm runner unique ( plop : int , plip : str ) -> str Haha Hoho Parameters: Name Type Description Default plop int oh yeah required plip str youhou required Returns: Name Type Description str str what a string! Source code in interesting/runner.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def unique ( plop : int , plip : str ) -> str : \"\"\"Haha Hoho Args: plop (int): oh yeah plip (str): youhou Returns: str: what a string! \"\"\" return f \" { plop } and { plip } \"","title":"Interesting"},{"location":"api_interesting/#interesting_1","text":"mmmm","title":"Interesting"},{"location":"api_interesting/#interesting.runner","text":"","title":"runner"},{"location":"api_interesting/#interesting.runner.unique","text":"Haha Hoho Parameters: Name Type Description Default plop int oh yeah required plip str youhou required Returns: Name Type Description str str what a string! Source code in interesting/runner.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def unique ( plop : int , plip : str ) -> str : \"\"\"Haha Hoho Args: plop (int): oh yeah plip (str): youhou Returns: str: what a string! \"\"\" return f \" { plop } and { plip } \"","title":"unique()"},{"location":"changelog/","text":"My changelog","title":"Changelog"}]}